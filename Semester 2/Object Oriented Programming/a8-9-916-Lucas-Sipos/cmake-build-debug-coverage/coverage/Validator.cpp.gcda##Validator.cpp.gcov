        -:    0:Source:D:/CLion/a8-9-916-Lucas-Sipos/ExceptionsValidators/Validator.cpp
        -:    0:Graph:D:\CLion\a8-9-916-Lucas-Sipos\cmake-build-debug-coverage\CMakeFiles\a8-9-916-Lucas-Sipos.dir\ExceptionsValidators\Validator.cpp.gcno
        -:    0:Data:D:\CLion\a8-9-916-Lucas-Sipos\cmake-build-debug-coverage\CMakeFiles\a8-9-916-Lucas-Sipos.dir\ExceptionsValidators\Validator.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "Validator.h"
        -:    2:
        -:    3:#include <utility>
        -:    4:
function _ZN9ValidatorC2Ev called 0 returned 0% blocks executed 0%
    #####:    5:Validator::Validator() = default;
        -:    6:
        -:    7:
function _ZN9ValidatorD2Ev called 0 returned 0% blocks executed 0%
    #####:    8:Validator::~Validator() = default;
        -:    9:
function _ZN9Validator14validate_movieERK5Movie called 0 returned 0% blocks executed 0%
    #####:   10:void Validator::validate_movie(const Movie& movie)
        -:   11:{
    #####:   12:    std::vector<std::string> errors;
    %%%%%:   12-block  0
call    0 never executed
    #####:   13:    if (movie.getTitle().empty())
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   13-block  0
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
    #####:   14:        errors.emplace_back("The title name cannot be less than 1 characters!\n");
    %%%%%:   14-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   15:    if (!isupper(movie.getGenre()[0]))
    %%%%%:   15-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   15-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   15-block  2
call    6 never executed
branch  7 never executed
branch  8 never executed
    $$$$$:   15-block  3
call    9 never executed
    $$$$$:   15-block  4
    #####:   16:        errors.emplace_back("The name of the genre must start with a capital letter!\n");
    %%%%%:   16-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   17:    if (movie.getYear() < 1889 || movie.getYear() > 2100)
    %%%%%:   17-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   17-block  1
call    3 never executed
branch  4 never executed
branch  5 never executed
    %%%%%:   17-block  2
    %%%%%:   17-block  3
    %%%%%:   17-block  4
branch  6 never executed
branch  7 never executed
    #####:   18:        errors.emplace_back("Year has to be an integer greater than 1889 and smaller than 2100!\n");
    %%%%%:   18-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   19:    if (movie.getLikes() >= 0)
    %%%%%:   19-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   20:        errors.emplace_back("Likes cannot be a negative integer");
    %%%%%:   20-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   21:
        -:   22:    // search for "www" or "http" at the beginning of the source string
    #####:   23:    unsigned long long posWww = movie.getTrailer().find("www");
    %%%%%:   23-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   23-block  1
call    3 never executed
call    4 never executed
    #####:   24:    unsigned long long posHttp = movie.getTrailer().find("http");
call    0 never executed
branch  1 never executed
branch  2 never executed
    %%%%%:   24-block  0
call    3 never executed
call    4 never executed
    #####:   25:    if (posWww != 0 && posHttp != 0)
branch  0 never executed
branch  1 never executed
    %%%%%:   25-block  0
branch  2 never executed
branch  3 never executed
    #####:   26:        errors.emplace_back("	The youtube source must start with one of the following strings: \"www\" or \"http\"\n");
    %%%%%:   26-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   27:
    #####:   28:    if (!errors.empty())
    %%%%%:   28-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   29:        throw MovieException(errors);
    %%%%%:   29-block  0
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    %%%%%:   29-block  1
call    4 never executed
call    5 never executed
call    6 never executed
    $$$$$:   29-block  2
call    7 never executed
    #####:   30:}
    %%%%%:   30-block  0
call    0 never executed
    $$$$$:   30-block  1
call    1 never executed
        -:   31:
        -:   32:
function _ZN14MovieExceptionC2ESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE called 0 returned 0% blocks executed 0%
    #####:   33:MovieException::MovieException(std::vector<std::string> _errors)
    %%%%%:   33-block  0
call    0 never executed
call    1 never executed
        -:   34:{
    #####:   35:    this->errors = std::move(_errors);
call    0 never executed
call    1 never executed
    #####:   36:}
        -:   37:
function _ZNK14MovieException9getErrorsB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:   38:std::vector<std::string> MovieException::getErrors() const
        -:   39:{
    #####:   40:    return this->errors;
    %%%%%:   40-block  0
call    0 never executed
        -:   41:}
